#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.33440
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCost(Cost instance);
  partial void UpdateCost(Cost instance);
  partial void DeleteCost(Cost instance);
  partial void InsertCountrylist(Countrylist instance);
  partial void UpdateCountrylist(Countrylist instance);
  partial void DeleteCountrylist(Countrylist instance);
  partial void InsertTable1(Table1 instance);
  partial void UpdateTable1(Table1 instance);
  partial void DeleteTable1(Table1 instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DatabaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Cost> Costs
	{
		get
		{
			return this.GetTable<Cost>();
		}
	}
	
	public System.Data.Linq.Table<Countrylist> Countrylists
	{
		get
		{
			return this.GetTable<Countrylist>();
		}
	}
	
	public System.Data.Linq.Table<Table1> Table1s
	{
		get
		{
			return this.GetTable<Table1>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cost")]
public partial class Cost : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _c1_name;
	
	private int _c1_num;
	
	private string _c2_name;
	
	private int _c2_num;
	
	private int _c3;
	
	private int _c4;
	
	private System.Nullable<int> _benefit;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onc1_nameChanging(string value);
    partial void Onc1_nameChanged();
    partial void Onc1_numChanging(int value);
    partial void Onc1_numChanged();
    partial void Onc2_nameChanging(string value);
    partial void Onc2_nameChanged();
    partial void Onc2_numChanging(int value);
    partial void Onc2_numChanged();
    partial void Onc3Changing(int value);
    partial void Onc3Changed();
    partial void Onc4Changing(int value);
    partial void Onc4Changed();
    partial void OnbenefitChanging(System.Nullable<int> value);
    partial void OnbenefitChanged();
    #endregion
	
	public Cost()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c1_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string c1_name
	{
		get
		{
			return this._c1_name;
		}
		set
		{
			if ((this._c1_name != value))
			{
				this.Onc1_nameChanging(value);
				this.SendPropertyChanging();
				this._c1_name = value;
				this.SendPropertyChanged("c1_name");
				this.Onc1_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c1_num", DbType="Int NOT NULL")]
	public int c1_num
	{
		get
		{
			return this._c1_num;
		}
		set
		{
			if ((this._c1_num != value))
			{
				this.Onc1_numChanging(value);
				this.SendPropertyChanging();
				this._c1_num = value;
				this.SendPropertyChanged("c1_num");
				this.Onc1_numChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c2_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string c2_name
	{
		get
		{
			return this._c2_name;
		}
		set
		{
			if ((this._c2_name != value))
			{
				this.Onc2_nameChanging(value);
				this.SendPropertyChanging();
				this._c2_name = value;
				this.SendPropertyChanged("c2_name");
				this.Onc2_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c2_num", DbType="Int NOT NULL")]
	public int c2_num
	{
		get
		{
			return this._c2_num;
		}
		set
		{
			if ((this._c2_num != value))
			{
				this.Onc2_numChanging(value);
				this.SendPropertyChanging();
				this._c2_num = value;
				this.SendPropertyChanged("c2_num");
				this.Onc2_numChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c3", DbType="Int NOT NULL")]
	public int c3
	{
		get
		{
			return this._c3;
		}
		set
		{
			if ((this._c3 != value))
			{
				this.Onc3Changing(value);
				this.SendPropertyChanging();
				this._c3 = value;
				this.SendPropertyChanged("c3");
				this.Onc3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c4", DbType="Int NOT NULL")]
	public int c4
	{
		get
		{
			return this._c4;
		}
		set
		{
			if ((this._c4 != value))
			{
				this.Onc4Changing(value);
				this.SendPropertyChanging();
				this._c4 = value;
				this.SendPropertyChanged("c4");
				this.Onc4Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_benefit", DbType="Int")]
	public System.Nullable<int> benefit
	{
		get
		{
			return this._benefit;
		}
		set
		{
			if ((this._benefit != value))
			{
				this.OnbenefitChanging(value);
				this.SendPropertyChanging();
				this._benefit = value;
				this.SendPropertyChanged("benefit");
				this.OnbenefitChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Countrylist")]
public partial class Countrylist : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _name;
	
	private int _num;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnnumChanging(int value);
    partial void OnnumChanged();
    #endregion
	
	public Countrylist()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num", DbType="Int NOT NULL")]
	public int num
	{
		get
		{
			return this._num;
		}
		set
		{
			if ((this._num != value))
			{
				this.OnnumChanging(value);
				this.SendPropertyChanging();
				this._num = value;
				this.SendPropertyChanged("num");
				this.OnnumChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table1")]
public partial class Table1 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _name;
	
	private string _wher;
	
	private string _owner;
	
	private int _count;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnwherChanging(string value);
    partial void OnwherChanged();
    partial void OnownerChanging(string value);
    partial void OnownerChanged();
    partial void OncountChanging(int value);
    partial void OncountChanged();
    #endregion
	
	public Table1()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wher", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string wher
	{
		get
		{
			return this._wher;
		}
		set
		{
			if ((this._wher != value))
			{
				this.OnwherChanging(value);
				this.SendPropertyChanging();
				this._wher = value;
				this.SendPropertyChanged("wher");
				this.OnwherChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string owner
	{
		get
		{
			return this._owner;
		}
		set
		{
			if ((this._owner != value))
			{
				this.OnownerChanging(value);
				this.SendPropertyChanging();
				this._owner = value;
				this.SendPropertyChanged("owner");
				this.OnownerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
	public int count
	{
		get
		{
			return this._count;
		}
		set
		{
			if ((this._count != value))
			{
				this.OncountChanging(value);
				this.SendPropertyChanging();
				this._count = value;
				this.SendPropertyChanged("count");
				this.OncountChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
